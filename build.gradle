plugins {
    id 'java'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "7.1.1"
}

group = 'fr.anarchick.anapi'
version = '1.0'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }

    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' } // This lets gradle find the BungeeCord files online
    maven { url = "https://repo.onarandombox.com/content/groups/public/" }
    maven { url 'https://libraries.minecraft.net' }
    maven { url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
    maven { url = 'https://hub.jeff-media.com/nexus/repository/jeff-media-public/' }
    maven { url "https://jitpack.io" } // Github repositories
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.18.2-R0.1-SNAPSHOT'
    compileOnly 'net.md-5:bungeecord-api:1.16-R0.5-SNAPSHOT'
    compileOnly 'commons-io:commons-io:2.11.0'
    compileOnly 'com.onarandombox.multiversecore:Multiverse-Core:4.3.1'
    compileOnly 'com.mojang:authlib:3.3.39'
    compileOnly 'me.clip:placeholderapi:2.11.5'
    implementation 'com.jeff_media:MorePersistentDataTypes:2.4.0'
    implementation 'com.github.Anarchick:CanI:main-SNAPSHOT'
    //compileOnly fileTree(include: ['*.jar'], dir: 'libs')
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    withSourcesJar()
    withJavadocJar()
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
    filesMatching('bungee.yml') {
        expand props
    }
}

shadowJar {
    relocate 'com.jeff_media.morepersistentdatatypes', 'fr.anarchick.anapi.bukkit.morepersistentdatatypes'
}


task export() {
    group = "other"
    description = "build gradle into external folder"
    def fromFile = 'build/libs/'+archivesBaseName+'-'+version+'-all.jar'
    def destinations = [
            'C:/Users/aeim/Documents/minecraft/law/server/HavenbBlock/plugins',
            'C:/Users/aeim/Documents/minecraft/law/server/FloatingRealms/plugins',
            'C:/Users/aeim/Documents/minecraft/law/programming/HavenBlock/libs',
            'C:/Users/aeim/Documents/minecraft/law/programming/FloatingRealms/libs',
            'C:/Users/aeim/Documents/minecraft/law/programming/FloatingRealmsCore/libs',
            'C:/Users/aeim/Documents/minecraft/btooom/server/plugins',
            'C:/Users/aeim/Documents/minecraft/law/programming/ValheimFood/libs',
            'C:/Users/aeim/Documents/minecraft/btooom/programing/btooom/libs'
    ]
    doLast {
        destinations.each {dest ->
            def destDir = file(dest)
            if (destDir.exists()) {
                copy {
                    from fromFile
                    into destDir
                    rename { String fileName ->
                        fileName.replace("-all", "")
                    }
                }
            } else {
                println "The folder '" + destDir + "' does not exist"
            }
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

wrapper {
    gradleVersion = "7.3.3"
    distributionType = Wrapper.DistributionType.ALL
}

build.dependsOn += shadowJar

shadowJar.finalizedBy export
